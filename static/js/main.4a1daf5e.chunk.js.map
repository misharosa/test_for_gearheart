{"version":3,"sources":["components/rectangle.tsx","components/ColorItem.tsx","App.tsx","index.js"],"names":["Rectangle","items","onChoose","turn","className","map","item","disabled","conditional","style","backgroundColor","color","classNames","conditional1","onClick","id","ColorItem","localStorage","setItem","JSON","stringify","colorFromServer","localColor","getItem","newColor","parse","console","log","App","useState","colors","setColors","setTurn","counter","setCounter","result","setResult","colorId","pre","forEach","prev","prevColors","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a1daf5e.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from \"classnames\";\nimport { Props } from \"../type/type\";\n\nexport const Rectangle: React.FC<Props> = ({ items, onChoose, turn }) => {\n        return (\n            <div>\n                <div className='rectangle'>\n                    {items.map(item => (\n                        <button\n                            disabled={item.conditional && !item.conditional || item.conditional && item.conditional}\n                            key={item.id}\n                            style={{backgroundColor: item.color}}\n                            className={classNames( {\n                                'button-true': item.conditional && item.conditional1,\n                                'button-false': item.conditional && !item.conditional1,\n                                'button': !item.conditional && !item.conditional,\n                                'button-passive': item.conditional && !item.conditional\n                                    || item.conditional && item.conditional\n                                || !turn\n                            })}\n                            onClick={() => onChoose(item.id)}\n                        >\n                        </button>\n                    ))}\n                </div>\n            </div>\n        )\n}","import React from \"react\";\nimport classNames from \"classnames\";\nimport {Props} from \"../type/type\";\n\nexport const ColorItem:React.FC<Props> = ({ items, onChoose, turn }) => {\n\n        return (\n            <div>\n                <ul className=\"list\">\n                    {items.map(item => (\n                        <button\n                            disabled={\n                                item.conditional && !item.conditional\n                                || item.conditional && item.conditional\n                                || !turn\n                            }\n                            className=\"btn-outline-secondary\"\n                            key={item.id}\n                            onClick={() => {\n                                onChoose(item.id)\n                            }}\n                        >\n                            {item.color}\n                        <span className={classNames({\n                            'icon-true': item.conditional && item.conditional1,\n                            'icon-false': item.conditional && !item.conditional1\n                        })}\n                        />\n                        </button>\n                    ))}\n                </ul>\n            </div>\n    )\n}\n","import React, { useState } from \"react\";\nimport './App.scss';\nimport colorFromServer from './data/data.json'\nimport { Rectangle } from \"./components/rectangle\";\nimport { ColorItem } from \"./components/ColorItem\";\nimport {Color} from \"./type/type\";\n\nlocalStorage.setItem('colors', JSON.stringify(colorFromServer))\n\nconst localColor:any = localStorage.getItem('colors')\nconst newColor = JSON.parse(localColor)\nconsole.log('newColor',newColor)\nfunction App():React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> {\n    const [colors, setColors] = useState(newColor);\n    const [turn, setTurn] = useState(false)\n    const [counter, setCounter] = useState(1)\n    const [result, setResult] = useState(0)\n\n    const handleText = (colorId: number) => {\n        setCounter(pre => pre + 1)\n        console.log(counter)\n        if (counter === 25) {\n            setResult(0)\n          colors.forEach((color:any) => {\n              if (color.conditional1) {\n                  setResult(prev => prev + 1)\n              }\n          })\n        }\n        setTurn(false)\n        setColors((prevColors:any) => prevColors.map((color:any) => {\n            if (color.id === colorId) {\n                return {...color, conditional: true}\n            }\n                return {...color}\n        }))\n    }\n\n    const handleRectangle = (colorId: number) => {\n        setTurn(true)\n        setColors((prevColors:any) => prevColors.map((color:any) => {\n            if (color.id === colorId) {\n                return {...color, conditional1: true}\n            }\n            if (!color.conditional) {\n                return {...color, conditional1: false}\n            }\n            return {...color}\n        }))\n    }\n\n    const handleClear = () => {\n        setTurn(false)\n        setCounter(1)\n        setColors((prevColors:any) => prevColors.map((color:any) => {\n                return {...color, conditional1: false, conditional: false}\n            }))\n    }\n\n    return (\n       <div className=\"App\">\n           <div>\n           <ColorItem\n               turn={turn}\n               items={colors}\n               onChoose={handleText}\n           />\n           </div>\n           <div className=\"line\"> </div>\n           <div>\n\n               <h1>{!turn && counter !== 26 ? 'ðŸ‘‡' : 'ðŸ‘ˆ'}Choose a colorðŸ¤“ <span className=\"text badge bg-secondary\">Good Luck!</span></h1>\n\n\n               {\n                   counter === 26 &&\n                   <h1>\n                       {result > 15 && result < 25 ? 'SuccessðŸ¤˜' : result === 25 ? `You're mega clever ðŸ¥¸ `\n                           : 'Try again ðŸ¤ª'}\n                       <span className=\"text badge bg-secondary\">\n                           Result: {result} / 25\n                       </span>\n                   </h1>\n               }\n               <br/>\n           <Rectangle\n               turn={turn}\n               onChoose={handleRectangle}\n               items={colors}\n           />\n           </div>\n\n           <button className=\"button-clear\" onClick={handleClear}>Restart</button>\n       </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}