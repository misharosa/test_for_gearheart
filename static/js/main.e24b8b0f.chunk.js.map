{"version":3,"sources":["components/rectangle.tsx","components/ColorItem.tsx","App.tsx","index.js"],"names":["Rectangle","items","onChoose","turn","newColor","sort","firstColor","secondColor","color","className","map","item","disabled","conditional","style","backgroundColor","classNames","conditional1","onClick","id","ColorItem","getLocal","localStorage","getItem","console","log","setItem","JSON","stringify","colorFromServer","App","parse","useState","colors","setColors","setTurn","counter","setCounter","result","setResult","colorId","pre","forEach","prev","prevColors","clear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e24b8b0f.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from \"classnames\";\nimport { Props } from \"../type/type\";\n\nexport const Rectangle: React.FC<Props> = ({ items, onChoose, turn }) => {\n    const newColor = [...items].sort(function(firstColor, secondColor){\n        if(firstColor.color < secondColor.color) { return -1; }\n        if(firstColor.color > secondColor.color) { return 1; }\n        return 0\n    });\n\n        return (\n            <div>\n                <div className='rectangle'>\n                    {newColor.map(item => (\n                        <button\n                            disabled={item.conditional && !item.conditional || item.conditional && item.conditional}\n                            key={item.id}\n                            style={{backgroundColor: item.color}}\n                            className={classNames( {\n                                'button-true': item.conditional && item.conditional1,\n                                'button-false': item.conditional && !item.conditional1,\n                                'button': !item.conditional && !item.conditional,\n                                'button-passive': item.conditional && !item.conditional\n                                    || item.conditional && item.conditional\n                                || !turn\n                            })}\n                            onClick={() => onChoose(item.id)}\n                        >\n                        </button>\n                    ))}\n                </div>\n            </div>\n        )\n}","import React from \"react\";\nimport classNames from \"classnames\";\nimport {Props} from \"../type/type\";\n\nexport const ColorItem:React.FC<Props> = ({ items, onChoose, turn }) => {\n\n        return (\n            <div>\n                <ul className=\"list\">\n                    {items.map(item => (\n                        <button\n                            disabled={\n                                item.conditional && !item.conditional\n                                || item.conditional && item.conditional\n                                || !turn\n                            }\n                            className=\"btn-outline-secondary\"\n                            key={item.id}\n                            onClick={() => {\n                                onChoose(item.id)\n                            }}\n                        >\n                            {item.color}\n                        <span className={classNames({\n                            'icon-true': item.conditional && item.conditional1,\n                            'icon-false': item.conditional && !item.conditional1\n                        })}\n                        />\n                        </button>\n                    ))}\n                </ul>\n            </div>\n    )\n}\n","import React, { useState } from \"react\";\nimport './App.scss';\nimport colorFromServer from './data/data.json'\nimport { Rectangle } from \"./components/rectangle\";\nimport { ColorItem } from \"./components/ColorItem\";\n\nconst getLocal:any = localStorage.getItem('color')\nconsole.log(getLocal)\nif (!getLocal) {\n    localStorage.setItem('color', JSON.stringify(colorFromServer))\n}\n\nfunction App():React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> {\n    const newLocal = JSON.parse(getLocal)\n    const [colors, setColors] = useState(colorFromServer);\n    const [turn, setTurn] = useState(false)\n    const [counter, setCounter] = useState(1)\n    const [result, setResult] = useState(0)\n    localStorage.setItem('color', JSON.stringify(colors))\n\n    const handleText = (colorId: number) => {\n        setCounter(pre => pre + 1)\n        if (counter === 25) {\n            setResult(0)\n          colors.forEach((color:any) => {\n              if (color.conditional1) {\n                  setResult(prev => prev + 1)\n              }\n          })\n        }\n        setTurn(false)\n        setColors((prevColors:any) => prevColors.map((color:any) => {\n            if (color.id === colorId) {\n                return {...color, conditional: true}\n            }\n                return {...color}\n        }))\n    }\n\n    const handleRectangle = (colorId: number) => {\n        setTurn(true)\n        setColors((prevColors:any) => prevColors.map((color:any) => {\n            if (color.id === colorId) {\n                return {...color, conditional1: true}\n            }\n            if (!color.conditional) {\n                return {...color, conditional1: false}\n            }\n            return {...color}\n        }))\n    }\n\n    const handleClear = () => {\n        localStorage.clear()\n        setTurn(false)\n        setCounter(1)\n        setColors((prevColors:any) => prevColors.map((color:any) => {\n                return {...color, conditional1: false, conditional: false}\n            }))\n    }\n\n    return (\n       <div className=\"App\">\n           <div>\n           <ColorItem\n               turn={turn}\n               items={colors}\n               onChoose={handleText}\n           />\n           </div>\n           <div className=\"line\"> </div>\n           <div>\n               {counter !== 26 &&\n               <h1>{!turn ? 'ðŸ‘‡' : 'ðŸ‘ˆ'}Choose a colorðŸ¤“ <span className=\"text badge bg-secondary\">Good Luck!</span></h1>\n               }\n               {\n                   counter === 26 &&\n                   <h1>\n                       {result > 15 && result < 25 ? 'SuccessðŸ¤˜' : result === 25 ? `You're mega clever ðŸ¥¸ `\n                           : 'Try again ðŸ¤ª'}\n                       <span className=\"text badge bg-secondary\">\n                           Result: {result} / 25\n                       </span>\n                   </h1>\n               }\n               <br/>\n           <Rectangle\n               turn={turn}\n               onChoose={handleRectangle}\n               items={colors}\n           />\n           </div>\n\n           <button className=\"button-clear\" onClick={handleClear}>Restart</button>\n       </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}